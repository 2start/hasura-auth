{
  "name": "hasura-auth",
  "license": "MIT",
  "repository": {
    "url": "git://github.com/nhost/hasura-auth.git",
    "type": "git"
  },
  "version": "0.0.0",
  "main": "src/start.ts",
  "scripts": {
    "dev:docker:up": "cd docker/dev; docker-compose up -d --build",
    "dev:docker:logs": "cd docker/dev; docker-compose logs -f",
    "dev:docker:down": "cd docker/dev; docker-compose down",
    "dev:codegen": "graphql-codegen --config codegen.yaml",
    "dev": "concurrently --restart-tries 5 --restart-after 5000 \"yarn dev:docker:up\" \"yarn dev:codegen -w\"",
    "test:docker:up": "cd docker/test; docker-compose -f docker-compose.watch.yaml up --build && docker-compose -f docker-compose.watch.yaml rm -fsv",
    "test:docker:logs": "cd docker/test; docker-compose -f docker-compose.watch.yaml logs -f",
    "test:docker:down": "cd docker/test; docker-compose -f docker-compose.watch.yaml down",
    "test:watch": "concurrently --restart-tries 5 --restart-after 5000 \"yarn test:docker:up\" \"yarn dev:codegen -w\"",
    "test": "cd docker/test; docker-compose up --build",
    "check-dev-env": "path-exists .env.development || (echo 'No .env.development file found' && return 1)",
    "check-prod-env": "path-exists .env || (echo 'No .env file found' && return 1)",
    "dev:old": "run-s check-dev-env && dotenv -e .env.development -- docker-compose -p \"hbp_development\" -f docker-compose.yaml -f docker-compose.development.yaml build hasura-auth && dotenv -e .env.development -- docker-compose -p \"hbp_development\" -f docker-compose.yaml -f docker-compose.development.yaml run --service-ports --use-aliases --entrypoint \"npm run dev-command\" hasura-auth",
    "dev-command": "ts-node-dev -r tsconfig-paths/register --no-deps --files --watch src,test,types --respawn --no-notify src/ts-start.ts",
    "dev:debug": "run-s check-dev-env && dotenv -e .env.development -- docker-compose -p \"hbp_development\" -f docker-compose.yaml -f docker-compose.development.yaml build hasura-auth && dotenv -e .env.development -- docker-compose -p \"hbp_development\" -f docker-compose.yaml -f docker-compose.development.yaml run --service-ports --use-aliases --entrypoint \"npm run dev:debug-command\" hasura-auth",
    "dev:debug-command": "node -r ts-node/register -r tsconfig-paths/register --inspect-brk=0.0.0.0 src/ts-start.ts",
    "dev:codegen:old": "run-s check-dev-env && dotenv -e .env.development -- docker-compose -p \"hbp_development\" -f docker-compose.yaml -f docker-compose.development.yaml build hasura-auth && dotenv -e .env.development -- docker-compose -p \"hbp_development\" -f docker-compose.yaml -f docker-compose.development.yaml run --service-ports --use-aliases --entrypoint \"npm run dev:codegen-command\" hasura-auth",
    "dev:codegen-command": "ts-node-dev -r tsconfig-paths/register --no-deps --files --watch src,test,types --respawn --poll --interval 1000 --no-notify src/codegen-start.ts",
    "codegen": "graphql-codegen --config codegen.yaml",
    "test:old": "run-s check-test-env && dotenv -e .env.test -- docker-compose -p \"hbp_test\" -f docker-compose.yaml -f docker-compose.test.yaml build hasura-auth && dotenv -e .env.test -- docker-compose -p \"hbp_test\" -f docker-compose.yaml -f docker-compose.test.yaml run --service-ports --use-aliases --entrypoint \"npm run test-command\" hasura-auth",
    "test-command": "jest --runInBand --coverage",
    "test:ci": "NODE_ENV=ci jest --coverage",
    "test:watch:old": "run-s check-test-env && dotenv -e .env.test -- docker-compose -p \"hbp_test\" -f docker-compose.yaml -f docker-compose.test.yaml build hasura-auth && dotenv -e .env.test -- docker-compose -p \"hbp_test\" -f docker-compose.yaml -f docker-compose.test.yaml run --service-ports --use-aliases --entrypoint \"npm run test:watch-command\" hasura-auth",
    "test:watch-command": "jest --runInBand --watchAll",
    "test:debug": "run-s check-test-env && dotenv -e .env.test -- docker-compose -p \"hbp_test\" -f docker-compose.yaml -f docker-compose.test.yaml build hasura-auth && dotenv -e .env.test -- docker-compose -p \"hbp_test\" -f docker-compose.yaml -f docker-compose.test.yaml run --service-ports --use-aliases --entrypoint \"npm run test:debug-command\" hasura-auth",
    "test:debug-command": "LOGGER_ENABLED=true LOGGER_LEVEL=debug node --inspect-brk=0.0.0.0 ./node_modules/jest/bin/jest.js --testTimeout=999999999 --runInBand",
    "report-coverage": "codecov",
    "docs:build": "vuepress build docs",
    "docs:dev": "vuepress dev docs",
    "build": "tsc",
    "start": "node -r ./dist/start.js",
    "lint": "eslint --ext .ts .",
    "lint:fix": "npm run lint --fix"
  },
  "config": {
    "commitizen": {
      "path": "./node_modules/cz-conventional-changelog"
    }
  },
  "dependencies": {
    "@nicokaiser/passport-apple": "^0.2.1",
    "@riderize/passport-strava-oauth2": "^1.1.1",
    "@types/sharp": "^0.27.1",
    "archiver": "4.0.1",
    "axios": "0.21.1",
    "bcryptjs": "^2.4.3",
    "body-parser": "1.19.0",
    "compare-urls": "^2.0.0",
    "cors": "2.8.5",
    "dotenv": "8.2.0",
    "ejs": "^3.1.6",
    "email-templates": "7.0.4",
    "express": "4.17.1",
    "express-boom": "^3.0.0",
    "express-fileupload": "1.1.9",
    "express-joi-validation": "^5.0.0",
    "express-rate-limit": "5.1.1",
    "express-session": "^1.17.1",
    "fs-extra": "^9.0.0",
    "graphql": "15.0.0",
    "graphql-request": "^3.4.0",
    "graphql-tag": "2.11.0",
    "gravatar": "^1.8.1",
    "helmet": "3.22.0",
    "hibp": "9.0.0",
    "joi": "^17.4.0",
    "jose": "1.28.1",
    "js-yaml": "3.13.1",
    "lodash.kebabcase": "4.1.1",
    "module-alias": "^2.2.2",
    "morgan": "^1.10.0",
    "nocache": "^2.1.0",
    "node-fetch": "^2.6.1",
    "nodemailer": "6.4.16",
    "notevil": "1.3.3",
    "otplib": "12.0.1",
    "passport": "0.4.1",
    "passport-bitbucket-oauth2": "^0.1.2",
    "passport-facebook": "^3.0.0",
    "passport-github2": "0.1.12",
    "passport-gitlab2": "^5.0.0",
    "passport-google-oauth20": "2.0.0",
    "passport-linkedin-oauth2": "^2.0.0",
    "passport-spotify": "^2.0.0",
    "passport-twitter": "^1.0.4",
    "passport-windowslive": "^1.0.2",
    "path-exists-cli": "^1.0.0",
    "pg": "^8.6.0",
    "postgres-migrations": "^5.1.1",
    "qrcode": "1.4.4",
    "sharp": "^0.27.0",
    "temp-dir": "^2.0.0",
    "uuid": "7.0.3",
    "winston": "^3.3.3"
  },
  "devDependencies": {
    "@graphql-codegen/cli": "^1.21.5",
    "@graphql-codegen/typescript": "^1.22.3",
    "@graphql-codegen/typescript-graphql-request": "^3.2.3",
    "@graphql-codegen/typescript-operations": "^1.18.2",
    "@types/archiver": "3.1.0",
    "@types/bcryptjs": "^2.4.2",
    "@types/body-parser": "1.19.0",
    "@types/cors": "2.8.6",
    "@types/death": "^1.1.1",
    "@types/ejs": "3.0.2",
    "@types/email-templates": "7.0.1",
    "@types/express": "4.17.6",
    "@types/express-boom": "^3.0.0",
    "@types/express-fileupload": "1.1.3",
    "@types/express-rate-limit": "5.0.0",
    "@types/express-session": "^1.17.0",
    "@types/fs-extra": "^8.1.0",
    "@types/gravatar": "^1.8.1",
    "@types/hapi__joi": "16.0.12",
    "@types/helmet": "0.0.45",
    "@types/jest": "^26.0.23",
    "@types/js-yaml": "3.12.3",
    "@types/lodash.kebabcase": "4.1.6",
    "@types/morgan": "^1.9.2",
    "@types/node": "^13.11.1",
    "@types/node-fetch": "^2.5.7",
    "@types/nodemailer": "6.4.0",
    "@types/passport": "1.0.3",
    "@types/passport-facebook": "^2.1.9",
    "@types/passport-github2": "1.2.4",
    "@types/passport-google-oauth20": "2.0.3",
    "@types/passport-linkedin-oauth2": "^1.5.1",
    "@types/passport-spotify": "^1.1.0",
    "@types/passport-twitter": "^1.0.34",
    "@types/pg": "^7.14.11",
    "@types/qrcode": "1.3.4",
    "@types/supertest": "^2.0.8",
    "@types/temp-dir": "^2.0.2",
    "@types/uuid": "7.0.2",
    "@typescript-eslint/eslint-plugin": "2.28.0",
    "@typescript-eslint/parser": "2.28.0",
    "@vuepress/plugin-back-to-top": "1.4.1",
    "codecov": "^3.7.1",
    "concurrently": "^6.2.0",
    "cz-conventional-changelog": "3.1.0",
    "dotenv-cli": "^4.0.0",
    "eslint": "6.8.0",
    "eslint-config-prettier": "6.10.1",
    "eslint-plugin-jest": "23.8.2",
    "eslint-plugin-prettier": "3.1.3",
    "get-port": "^5.1.1",
    "husky": "4.2.5",
    "jest": "^27.0.6",
    "jest-extended": "0.11.5",
    "lint-staged": "10.1.3",
    "markdown-it-multimd-table": "4.0.1",
    "npm-run-all": "^4.1.5",
    "prettier": "^2.3.2",
    "pretty-quick": "2.0.1",
    "supertest": "4.0.2",
    "ts-jest": "^27.0.3",
    "ts-node": "8.8.2",
    "ts-node-dev": "^1.1.6",
    "tsconfig-paths": "3.9.0",
    "typescript": "3.8.3",
    "vuepress": "^1.8.2"
  },
  "_moduleAliases": {
    "@middleware": "./dist/middleware",
    "@routes": "./dist/routes",
    "@config": "./dist/config",
    "@": "./dist"
  },
  "husky": {
    "hooks": {
      "pre-commit": "lint-staged"
    }
  },
  "lint-staged": {
    "*.js,*.ts,*.md,*.json": [
      "eslint --fix",
      "prettier --write"
    ]
  }
}
